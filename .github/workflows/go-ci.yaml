name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

permissions:
  contents: read
  pull-requests: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Dependencies
        run: go mod download

      - name: Generate Code Coverage
        run: go test -v -coverprofile=coverage.txt -covermode=atomic ./...

  #      - name: Upload Code Coverage to Codecov
  #        uses: codecov/codecov-action@v2
  #        env:
  #          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  #        with:
  #          file: coverage.txt

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.3
          only-new-issues: false

  build:
    name: docker
    runs-on: ubuntu-latest
    needs:
      - golangci
      - test
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
      - uses: docker/build-push-action@v2
        with:
          file: "Dockerfile"
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
