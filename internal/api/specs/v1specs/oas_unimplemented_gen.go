// Code generated by ogen, DO NOT EDIT.

package v1specs

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateScan implements createScan operation.
//
// Starts an asynchronous scan for the given page URL. Returns a scan resource with status `PENDING`.
//
// POST /scans
func (UnimplementedHandler) CreateScan(ctx context.Context, req *CreateScanRequest) (r CreateScanRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteScan implements deleteScan operation.
//
// Delete a scan.
//
// DELETE /scans/{id}
func (UnimplementedHandler) DeleteScan(ctx context.Context, params DeleteScanParams) (r DeleteScanRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetScan implements getScan operation.
//
// Get a single scan.
//
// GET /scans/{id}
func (UnimplementedHandler) GetScan(ctx context.Context, params GetScanParams) (r GetScanRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListScans implements listScans operation.
//
// Returns scans owned by the caller. Use `cursor` and `limit` for pagination. The response includes
// `next_cursor` when more pages exist.
//
// GET /scans
func (UnimplementedHandler) ListScans(ctx context.Context, params ListScansParams) (r ListScansRes, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *ServerErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ServerErrorStatusCode) {
	r = new(ServerErrorStatusCode)
	return r
}
